/*  $Id$
 *
 *  Copyright (c) 2010 Anders Wallin (anders.e.e.wallin "at" gmail.com).
 *
 *  This file is part of OpenCAMlib
 *  (see https://github.com/aewallin/opencamlib).
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 2.1 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include <pybind11/pybind11.h>

#ifdef _OPENMP
#include <omp.h>
#endif
#include "version_string.hpp" // autogenerated by version_string.cmake
#include <string>

namespace py = pybind11;

std::string ocl_docstring() { return "OpenCAMLib docstring"; }

std::string ocl_version() { return VERSION_STRING; }

int ocl_max_threads() {
#ifdef _OPENMP
    return omp_get_max_threads();
#endif
    return 1;
}

void export_cutters(py::module_& m);
void export_geometry(py::module_& m);
void export_algo(py::module_& m);
void export_dropcutter(py::module_& m);

PYBIND11_MODULE(ocl, m) {
    m.doc() = ocl_docstring();

    m.def("version", &ocl_version, "Return the version string of OpenCAMLib");
    m.def("max_threads", &ocl_max_threads, "Return the maximum number of available threads");

    export_geometry(m);   // defined in ocl_geometry.cpp
    export_cutters(m);    // defined in ocl_cutters.cpp
    export_algo(m);       // defined in ocl_algo.cpp
    export_dropcutter(m); // defined in ocl_dropcutter.cpp
}
