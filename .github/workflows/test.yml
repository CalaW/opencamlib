name: Test

on:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - master
      - develop
    tags:
      - v*

jobs:
  cxx:
    name: ${{ matrix.os_short }} c++
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022", "macos-11.0", "ubuntu-22.04"]
        include:
          - os: "windows-2022"
            os_short: "windows"
            boost_prefix: /c/boost/boost_1_80_0
          - os: "macos-11.0"
            os_short: "macos"
            boost_prefix: /tmp/boost/boost_1_80_0
          - os: "ubuntu-22.04"
            os_short: "linux"
            boost_prefix: /tmp/boost/boost_1_80_0
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install
        shell: bash
        run: |
          ./scripts/install-${{ matrix.os_short }}.sh cxxlib release \
            --boost-from-source \
            --boost-headers-only
      - name: Build
        shell: bash
        run: |
          if [ "${{ matrix.os_short }}" == "linux" ]; then
            export OCL_SUDO_INSTALL="1"
          fi
          ./scripts/build-${{ matrix.os_short }}.sh cxxlib release \
            --use-openmp \
            --boost-prefix ${{ matrix.boost_prefix }}
      - name: Test
        shell: bash
        env:
          BOOST_ROOT: ${{ matrix.boost_prefix }}
        run: ./scripts/test-${{ matrix.os_short }}.sh cxxlib release
  nodejs:
    name: ${{ matrix.os_short }} node.js
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022", "macos-11.0", "ubuntu-22.04"]
        include:
          - os: "windows-2022"
            os_short: "windows"
            boost_prefix: /c/boost/boost_1_80_0
            libdir: windows-nodejs-x64
          - os: "macos-11.0"
            os_short: "macos"
            boost_prefix: /tmp/boost/boost_1_80_0
            libdir: darwin-nodejs-x64
          - os: "ubuntu-22.04"
            os_short: "linux"
            boost_prefix: /tmp/boost/boost_1_80_0
            libdir: linux-nodejs-x64
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install
        shell: bash
        run: |
          ./scripts/install-${{ matrix.os_short }}.sh nodejslib release \
            --boost-from-source \
            --boost-headers-only
      - name: Build
        shell: bash
        run: |
          export OCL_INSTALL_PREFIX="$(pwd)/src/npmpackage/build/Release/${{ matrix.libdir }}"
          ./scripts/build-${{ matrix.os_short }}.sh nodejslib release \
            --use-openmp \
            --boost-prefix ${{ matrix.boost_prefix }}
      - name: Test
        shell: bash
        run: ./scripts/test-${{ matrix.os_short }}.sh nodejslib release
  python:
    name: ${{ matrix.os_short }} python
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2022", "macos-11.0", "ubuntu-22.04"]
        include:
          - os: "windows-2022"
            os_short: "windows"
            python_executable: C:\\hostedtoolcache\\windows\\Python\\3.10.8\\x64\\python3.exe
          - os: "macos-11.0"
            os_short: "macos"
          - os: "ubuntu-22.04"
            os_short: "linux"
            cmake_generator: "Unix Makefiles"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install
        shell: bash
        run: |
          if [ "${{ matrix.os_short }}" == "linux" ]; then
            ./scripts/install-${{ matrix.os_short }}.sh python3lib release \
              --boost-from-source
          else
            ./scripts/install-${{ matrix.os_short }}.sh python3lib release
          fi
      - name: Build
        shell: bash
        env:
          OCL_PYTHON_EXECUTABLE: ${{ matrix.python_executable }}
          CMAKE_GENERATOR: ${{ matrix.cmake_generator }}
        run: |
          if [ "${{ matrix.os_short }}" == "linux" ]; then
            export BOOST_ROOT="/tmp/boost"
          fi
          ${OCL_PYTHON_EXECUTABLE:-python3} -m pip install --verbose .
      - name: Test
        shell: bash
        env:
          OCL_PYTHON_EXECUTABLE: ${{ matrix.python_executable }}
        run: ./scripts/test-${{ matrix.os_short }}.sh python3lib release
