name: Test

on:
  pull_request:
    branches:
      - master
    paths:
      - 'scripts/**'
      - 'src/**'
  push:
    branches:
      - master
    tags:
      - v*
    paths:
      - 'scripts/**'
      - 'src/**'

jobs:
  test:
    name: Test ${{ matrix.os }} ${{ matrix.lib }} ${{ matrix.release_type }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        # We only run on a single os version to not run into CI limits.
        os: [
          # ubuntu-16.04, # builds on this version are not picked up quickly on the free plan
          # ubuntu-18.04,
          # ubuntu-20.04,
          ubuntu-22.04,
          # macos-10.5, # builds on this version are not picked up quickly on the free plan
          macos-11.0,
          # macos-12.00, # builds on this version are not picked up quickly on the free plan
          # windows-2019,
          windows-2022
        ]
        lib: [
          cxxlib,
          python3lib,
          nodejslib,
          emscriptenlib
        ]
        release_type: [
          # debug,
          release
        ]
        include:
          - os: windows-2022
            lib: python3lib
            python_executable: C:/hostedtoolcache/windows/Python/3.10.8/x64/python3.exe
            python_prefix: C:/hostedtoolcache/windows/Python/3.10.8/x64
            generator: Visual Studio 17 2022
            boost_from_source: "1"
          - os: windows-2022
            lib: emscriptenlib
            boost_from_source: "1"
            generator: Visual Studio 17 2022
          - os: windows-2022
            lib: cxxlib
            generator: Visual Studio 17 2022
          - os: windows-2022
            lib: nodejslib
            generator: Visual Studio 17 2022
          - os: macos-11.0
            lib: python3lib
            python_executable: /usr/local/opt/python@3.10/bin/python3
            python_prefix: /usr/local/opt/python@3.10
          - os: ubuntu-22.04
            lib: emscriptenlib
            boost_from_source: "1"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install
        shell: bash
        run: |
          export PYTHON_EXECUTABLE="${{ matrix.python_executable }}"
          export PYTHON_PREFIX="${{ matrix.python_prefix }}"
          export BOOST_FROM_SOURCE="${{ matrix.boost_from_source }}"
          OSNAME="${{ matrix.os }}"
          ./scripts/install-${OSNAME%%-*}.sh ${{ matrix.lib }} ${{ matrix.release_type }}
      - name: Build
        shell: bash
        run: |
          export PYTHON_EXECUTABLE="${{ matrix.python_executable }}"
          export PYTHON_PREFIX="${{ matrix.python_prefix }}"
          export BOOST_FROM_SOURCE="${{ matrix.boost_from_source }}"
          OSNAME="${{ matrix.os }}"
          ./scripts/build-${OSNAME%%-*}.sh ${{ matrix.lib }} ${{ matrix.release_type }}
      - name: Test
        shell: bash
        run: |
          export PYTHON_EXECUTABLE="${{ matrix.python_executable }}"
          export PYTHON_PREFIX="${{ matrix.python_prefix }}"
          export BOOST_FROM_SOURCE="${{ matrix.boost_from_source }}"
          OSNAME="${{ matrix.os }}"
          ./scripts/test-${OSNAME%%-*}.sh ${{ matrix.lib }} ${{ matrix.release_type }}
